package mx.test.android.gonet.domainlib.models

import android.os.Parcelable
import kotlinx.android.parcel.Parcelize
import mx.test.android.gonet.domainlib.models.child.*

@Parcelize
data class TvShowDetailModel(
    var backdropPath: String,
    var createdBy: List<CreatedByModel>,
    var episodeRunTime: List<Int>,
    var firstAirDate: String,
    var genres: List<GenreModel>,
    var homepage: String,
    var id: Int,
    var inProduction: Boolean,
    var languages: List<String>,
    var lastAirDate: String,
    var lastEpisodeToAir: LastEpisodeToAirModel,
    var name: String,
    var networks: List<NetworkModel>,
    var numberOfEpisodes: Int,
    var numberOfSeasons: Int,
    var originCountry: List<String>,
    var originalLanguage: String,
    var originalName: String,
    var overview: String,
    var popularity: Double,
    var posterPath: String,
    var productionCompanies: List<ProductionCompanyModel>,
    var productionCountries: List<ProductionCountryModel>,
    var seasons: List<SeasonModel>,
    var spokenLanguages: List<SpokenLanguageModel>,
    var status: String,
    var tagline: String,
    var type: String,
    var voteAverage: Double,
    var voteCount: Int,
) : Parcelable {
    constructor() : this(
        backdropPath = "",
        createdBy = listOf<CreatedByModel>(),
        episodeRunTime = listOf<Int>(),
        firstAirDate = "",
        genres = listOf<GenreModel>(),
        homepage = "",
        id = -1,
        inProduction = false,
        languages = listOf<String>(),
        lastAirDate = "",
        lastEpisodeToAir = LastEpisodeToAirModel(),
        name = "",
        networks = listOf<NetworkModel>(),
        numberOfEpisodes = -1,
        numberOfSeasons = -1,
        originCountry = listOf<String>(),
        originalLanguage = "",
        originalName = "",
        overview = "",
        popularity = -1.0,
        posterPath = "",
        productionCompanies = listOf<ProductionCompanyModel>(),
        productionCountries = listOf<ProductionCountryModel>(),
        seasons = listOf<SeasonModel>(),
        spokenLanguages = listOf<SpokenLanguageModel>(),
        status = "",
        tagline = "",
        type = "",
        voteAverage = -1.0,
        voteCount = -1
    )
}